// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "com.github.ben-manes.versions"
buildscript {
    ext {
        ANDROID_PLUGIN_VERSION = '4.0.1'
        KOTLIN_VERSION = '1.3.72'
        NAV_VERSION = '2.2.2'
        GMS_VERSION = '4.3.3'
        CRASHLYTICS_VERSION = '2.0.0'
        VERSIONS_VERSION = '0.28.0'
        SQL_DELIGHT_VERSION = '1.2.2'
    }
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$NAV_VERSION"
        classpath "com.google.gms:google-services:$GMS_VERSION"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$CRASHLYTICS_VERSION"
        classpath "com.github.ben-manes:gradle-versions-plugin:$VERSIONS_VERSION"
        classpath "com.squareup.sqldelight:gradle-plugin:$SQL_DELIGHT_VERSION"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    configurations.all {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
    }
}

subprojects { project ->
    apply from: "$rootDir/library_version.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}


dependencyUpdates {

    checkForGradleUpdate = true

    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }

     /*
     * Command to check new version
     * ./gradlew dependencyUpdates -Drevision=release -DoutputFormatter=json,xml
     */
}
